
extern void GO_EXPORT(ParseStatement)(void * arg0,void * arg1,void ** arg2,void ** arg3);
extern void GO_EXPORT(ParseScript)(void * arg0,void * arg1,int arg2,void ** arg3,void ** arg4);
extern void GO_EXPORT(ParseNextStatement)(void * arg0,void * arg1,void ** arg2,char* arg3,void ** arg4);
extern void GO_EXPORT(ParseNextScriptStatement)(void * arg0,void * arg1,void ** arg2,char* arg3,void ** arg4);
extern void GO_EXPORT(ParseType)(void * arg0,void * arg1,void ** arg2,void ** arg3);
extern void GO_EXPORT(ParseExpression)(void * arg0,void * arg1,void ** arg2,void ** arg3);
extern void GO_EXPORT(Unparse)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParseResumeLocation_FromStringView)(void * arg0,void ** arg1);
extern void GO_EXPORT(Status_OK)(void * arg0,char* arg1);
extern void GO_EXPORT(Status_String)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParserOptions_new)(void ** arg0);
extern void GO_EXPORT(ParserOptions_set_language_options)(void * arg0,void * arg1);
extern void GO_EXPORT(ParserOptions_language_options)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParserOutput_statement)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParserOutput_script)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParserOutput_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParserOutput_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNode_getId)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTNode_node_kind)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTNode_SingleNodeDebugString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNode_set_parent)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTNode_parent)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNode_AddChildren)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTNode_AddChild)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTNode_SetChild)(void * arg0,void * arg1,int arg2);
extern void GO_EXPORT(ASTNode_AddChildFront)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTNode_num_children)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTNode_child)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTNode_mutable_child)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTNode_find_child_index)(void * arg0,int arg1,int* arg2);
extern void GO_EXPORT(ASTNode_DebugString)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTNode_MoveStartLocation)(void * arg0,int arg1);
extern void GO_EXPORT(ASTNode_MoveStartLocationBack)(void * arg0,int arg1);
extern void GO_EXPORT(ASTNode_SetStartLocationToEndLocation)(void * arg0);
extern void GO_EXPORT(ASTNode_MoveEndLocationBack)(void * arg0,int arg1);
extern void GO_EXPORT(ASTNode_set_start_location)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTNode_set_end_location)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTNode_IsTableExpression)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsQueryExpression)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsExpression)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsType)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsLeaf)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsStatement)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsScriptStatement)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsLoopStatement)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsSqlStatement)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsDdlStatement)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsCreateStatement)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_IsAlterStatement)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTNode_GetNodeKindString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNode_GetParseLocationRange)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNode_GetLocationString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNode_NodeKindToString)(int arg0,void ** arg1);
extern void GO_EXPORT(ParseLocationPoint_filename)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParseLocationPoint_GetByteOffset)(void * arg0,int* arg1);
extern void GO_EXPORT(ParseLocationPoint_GetString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParseLocationRange_start)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParseLocationRange_end)(void * arg0,void ** arg1);
extern void GO_EXPORT(ParseLocationRange_GetString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTQueryStatement_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTQueryExpression_set_parenthesized)(void * arg0,int arg1);
extern void GO_EXPORT(ASTQueryExpression_parenthesized)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTQuery_set_is_nested)(void * arg0,int arg1);
extern void GO_EXPORT(ASTQuery_is_nested)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTQuery_set_is_pivot_input)(void * arg0,int arg1);
extern void GO_EXPORT(ASTQuery_is_pivot_input)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTQuery_with_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTQuery_query_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTQuery_order_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTQuery_limit_offset)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_set_distinct)(void * arg0,int arg1);
extern void GO_EXPORT(ASTSelect_distinct)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTSelect_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_anonymization_options)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_select_as)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_select_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_from_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_where_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_group_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_having)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_qualify)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelect_window_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelectList_column_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTSelectList_column)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTSelectColumn_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelectColumn_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExpression_set_parenthesized)(void * arg0,int arg1);
extern void GO_EXPORT(ASTExpression_parenthesized)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTExpression_IsAllowedInComparison)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTLeaf_image)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLeaf_set_image)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTIntLiteral_is_hex)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTIdentifier_GetAsString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIdentifier_SetIdentifier)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTAlias_identifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlias_GetAsString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPathExpression_num_names)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTPathExpression_name)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTPathExpression_ToIdentifierPathString)(void * arg0,uint32_t arg1,void ** arg2);
extern void GO_EXPORT(ASTTablePathExpression_path_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTablePathExpression_unnest_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTablePathExpression_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTablePathExpression_with_offset)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTablePathExpression_pivot_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTablePathExpression_unpivot_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTablePathExpression_for_system_time)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTablePathExpression_sample_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTablePathExpression_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFromClause_table_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWhereClause_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBooleanLiteral_set_value)(void * arg0,int arg1);
extern void GO_EXPORT(ASTBooleanLiteral_value)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAndExpr_conjuncts_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTAndExpr_conjunct)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTBinaryExpression_set_op)(void * arg0,int arg1);
extern void GO_EXPORT(ASTBinaryExpression_op)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTBinaryExpression_set_is_not)(void * arg0,int arg1);
extern void GO_EXPORT(ASTBinaryExpression_is_not)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTBinaryExpression_lhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBinaryExpression_rhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBinaryExpression_GetSQLForOperator)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStringLiteral_string_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStringLiteral_set_string_value)(void * arg0,void * arg1);
extern void GO_EXPORT(ASTOrExpr_disjuncts_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTOrExpr_disjunct)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTGroupingItem_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGroupingItem_rollup)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGroupBy_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGroupBy_grouping_items_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTGroupBy_grouping_item)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTOrderingExpression_set_ordering_spec)(void * arg0,int arg1);
extern void GO_EXPORT(ASTOrderingExpression_ordering_spec)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTOrderingExpression_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTOrderingExpression_collate)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTOrderingExpression_null_order)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTOrderBy_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTOrderBy_ordering_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTOrderBy_ordering_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTLimitOffset_limit)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLimitOffset_offset)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTOnClause_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWithClauseEntry_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWithClauseEntry_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTJoin_set_join_type)(void * arg0,int arg1);
extern void GO_EXPORT(ASTJoin_join_type)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTJoin_set_join_hint)(void * arg0,int arg1);
extern void GO_EXPORT(ASTJoin_join_hint)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTJoin_set_natural)(void * arg0,int arg1);
extern void GO_EXPORT(ASTJoin_natural)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTJoin_set_unmatched_join_count)(void * arg0,int arg1);
extern void GO_EXPORT(ASTJoin_unmatched_join_count)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTJoin_set_transformation_needed)(void * arg0,int arg1);
extern void GO_EXPORT(ASTJoin_transformation_needed)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTJoin_set_contains_comma_join)(void * arg0,int arg1);
extern void GO_EXPORT(ASTJoin_contains_comma_join)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTJoin_lhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTJoin_rhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTJoin_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTJoin_on_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTJoin_using_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(JoinParseError_error_node)(void * arg0,void ** arg1);
extern void GO_EXPORT(JoinParseError_message)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTJoin_parse_error)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTJoin_GetSQLForJoinType)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTJoin_GetSQLForJoinHint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWithClause_set_recursive)(void * arg0,int arg1);
extern void GO_EXPORT(ASTWithClause_recursive)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTWithClause_with_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTWithClause_with)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTHaving_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTType_type_parameters)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTType_collate)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSimpleType_type_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTArrayType_element_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStructField_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStructField_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStructType_struct_fields_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTStructType_struct_field)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTCastExpression_set_is_safe_cast)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCastExpression_is_safe_cast)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCastExpression_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCastExpression_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCastExpression_format)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelectAs_set_as_mode)(void * arg0,int arg1);
extern void GO_EXPORT(ASTSelectAs_as_mode)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTSelectAs_type_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSelectAs_is_select_as_struct)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTSelectAs_is_select_as_value)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTRollup_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTRollup_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTFunctionCall_set_null_handling_modifier)(void * arg0,int arg1);
extern void GO_EXPORT(ASTFunctionCall_null_handling_modifier)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTFunctionCall_set_distinct)(void * arg0,int arg1);
extern void GO_EXPORT(ASTFunctionCall_distinct)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTFunctionCall_set_is_current_date_time_without_parentheses)(void * arg0,int arg1);
extern void GO_EXPORT(ASTFunctionCall_is_current_date_time_without_parentheses)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTFunctionCall_function)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCall_having_modifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCall_clamped_between_modifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCall_order_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCall_limit_offset)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCall_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCall_with_group_rows)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCall_arguments_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTFunctionCall_argument)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTFunctionCall_HasModifiers)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTArrayConstructor_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTArrayConstructor_elements_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTArrayConstructor_element)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTStructConstructorArg_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStructConstructorArg_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStructConstructorWithParens_field_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTStructConstructorWithParens_field_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTStructConstructorWithKeyword_struct_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStructConstructorWithKeyword_fields_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTStructConstructorWithKeyword_field)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTInExpression_set_is_not)(void * arg0,int arg1);
extern void GO_EXPORT(ASTInExpression_is_not)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTInExpression_lhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInExpression_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInExpression_in_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInExpression_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInExpression_unnest_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInList_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTInList_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTBetweenExpression_set_is_not)(void * arg0,int arg1);
extern void GO_EXPORT(ASTBetweenExpression_is_not)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTBetweenExpression_lhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBetweenExpression_low)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBetweenExpression_high)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDateOrTimeLiteral_set_type_kind)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDateOrTimeLiteral_type_kind)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTDateOrTimeLiteral_string_literal)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCaseValueExpression_arguments_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTCaseValueExpression_argument)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTCaseNoValueExpression_arguments_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTCaseNoValueExpression_argument)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTArrayElement_array)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTArrayElement_position)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBitwiseShiftExpression_set_is_left_shift)(void * arg0,int arg1);
extern void GO_EXPORT(ASTBitwiseShiftExpression_is_left_shift)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTBitwiseShiftExpression_lhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBitwiseShiftExpression_rhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCollate_collation_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDotGeneralizedField_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDotGeneralizedField_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDotIdentifier_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDotIdentifier_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDotStar_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDotStarWithModifiers_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDotStarWithModifiers_modifiers)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExpressionSubquery_set_modifier)(void * arg0,int arg1);
extern void GO_EXPORT(ASTExpressionSubquery_modifier)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTExpressionSubquery_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExpressionSubquery_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExtractExpression_lhs_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExtractExpression_rhs_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExtractExpression_time_zone_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTHavingModifier_set_modifier_kind)(void * arg0,int arg1);
extern void GO_EXPORT(ASTHavingModifier_modifier_kind)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTHavingModifier_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIntervalExpr_interval_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIntervalExpr_date_part_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIntervalExpr_date_part_name_to)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNamedArgument_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNamedArgument_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNullOrder_set_nulls_first)(void * arg0,int arg1);
extern void GO_EXPORT(ASTNullOrder_nulls_first)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTOnOrUsingClauseList_on_or_using_clause_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTOnUsingClauseList_on_or_using_clause_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTParenthesizedJoin_join)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTParenthesizedJoin_sample_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPartitionBy_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPartitionBy_partitioning_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTPartitionBy_partitioning_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTSetOperation_set_op_type)(void * arg0,int arg1);
extern void GO_EXPORT(ASTSetOperation_op_type)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTSetOperation_set_distinct)(void * arg0,int arg1);
extern void GO_EXPORT(ASTSetOperation_distinct)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTSetOperation_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSetOperation_inputs_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTSetOperation_input)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTSetOperation_GetSQLForOperation)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStarExceptList_identifiers_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTStarExpcetList_identifier)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTStarModifiers_except_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStarModifiers_replace_items_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTStarModifiers_replace_item)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTStarReplaceItem_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStarReplaceItem_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStarWithModifiers_modifiers)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableSubquery_subquery)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableSubquery_pivot_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableSubquery_unpivot_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableSubquery_sample_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableSubquery_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnaryExpression_set_op)(void * arg0,int arg1);
extern void GO_EXPORT(ASTUnaryExpression_op)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTUnaryExpression_operand)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnaryExpression_GetSQLForOperator)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnnestExpression_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowClause_windows_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTWindowClause_window)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTWindowDefinition_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowDefinition_window_spec)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowFrame_start_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowFrame_end_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowFrame_set_unit)(void * arg0,int arg1);
extern void GO_EXPORT(ASTWindowFrame_frame_unit)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTWindowFrame_GetFrameUnitString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowFrameExpr_set_boundary_type)(void * arg0,int arg1);
extern void GO_EXPORT(ASTWindowFrameExpr_boundary_type)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTWindowFrameExpr_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLikeExpression_set_is_not)(void * arg0,int arg1);
extern void GO_EXPORT(ASTLikeExpression_is_not)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTLikeExpression_lhs)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLikeExpression_op)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLikeExpression_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLikeExpression_in_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLikeExpression_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLikeExpression_unnest_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowSpecification_base_window_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowSpecification_partition_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowSpecification_order_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWindowSpecification_window_frame)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWithOffset_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAnySomeAllOp_set_op)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAnySomeAllOp_op)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTAnySomeAllOp_GetSQLForOperator)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStatementList_set_variable_declarations_allowed)(void * arg0,int arg1);
extern void GO_EXPORT(ASTStatementList_variable_declarations_allowed)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTStatementList_statement_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTStatementList_statement_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTHintedStatement_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTHintedStatement_statement)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExplainStatement_statement)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDescribeStatement_optional_identifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDescribeStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDescribeStatement_optional_from_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTShowStatement_identifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTShowStatement_optional_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTShowStatement_optional_like_string)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTransactionIsolationLevel_identifier1)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTransactionIsolationLevel_identifier2)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTransactionReadWriteMode_set_mode)(void * arg0,int arg1);
extern void GO_EXPORT(ASTTransactionReadWriteMode_mode)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTTransactionModeList_elements_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTTransactionModeList_element)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTBeginStatement_mode_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSetTransactionStatement_mode_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStartBatchStatement_batch_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDdlStatement_GetDdlTarget)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropEntityStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropEntityStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropEntityStatement_entity_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropEntityStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropFunctionStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropFunctionStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropFunctionStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropFunctionStatement_parameters)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropTableFunctionStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropTableFunctionStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropTableFunctionStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropAllRowAccessPoliciesStatement_set_has_access_keyword)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropAllRowAccessPoliciesStatement_has_access_keyword)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropAllRowAccessPoliciesStatement_table_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropMaterializedViewStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropMaterializedViewStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropMaterializedViewStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropSnapshotTableStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropSnapshotTableStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropSnapshotTableStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropSearchIndexStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropSearchIndexStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropSearchIndexStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropSearchIndexStatement_table_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRenameStatement_identifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRenameStatement_old_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRenameStatement_new_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTImportStatement_set_import_kind)(void * arg0,int arg1);
extern void GO_EXPORT(ASTImportStatement_import_kind)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTImportStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTImportStatement_string_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTImportStatement_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTImportStatement_into_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTImportStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTModuleStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTModuleStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWithConnectionClause_connection_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIntoAlias_identifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIntoAlias_GetAsString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnnestExpressionWithOptAliasAndOffset_unnest_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnnestExpressionWithOptAliasAndOffset_optional_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnnestExpressionWithOptAliasAndOffset_optional_with_offset)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPivotExpression_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPivotExpression_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPivotValue_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPivotValue_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPivotExpressionList_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTPivotExpressionList_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTPivotValueList_values_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTPivotValueList_value)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTPivotClause_pivot_expressions)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPivotClause_for_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPivotClause_pivot_values)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPivotClause_output_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnpivotInItem_unpivot_columns)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnpivotInItem_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnpivotInItemList_in_items_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTUnpivotInItemList_in_item)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTUnpivotClause_set_null_filter)(void * arg0,int arg1);
extern void GO_EXPORT(ASTUnpivotClause_null_filter)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTUnpivotClause_unpivot_output_value_columns)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnpivotClause_unpivot_output_name_column)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnpivotClause_unpivot_in_items)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnpivotClause_output_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUsingClause_keys_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTUsingClause_key)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTForSystemTime_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTQualify_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTClampedBetweenModifier_low)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTClampedBetweenModifier_high)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFormatClause_format)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFormatClause_time_zone_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPathExpressionList_path_expression_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTPathExpressionList_path_expression_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTParameterExpr_set_position)(void * arg0,int arg1);
extern void GO_EXPORT(ASTParameterExpr_position)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTParameterExpr_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSystemVariableExpr_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWithGroupRows_subquery)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLambda_argument_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLambda_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAnalyticFunctionCall_window_spec)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAnalyticFunctionCall_function)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAnalyticFunctionCall_function_with_group_rows)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCallWithGroupRows_function)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionCallWithGroupRows_subquery)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTClusterBy_clustering_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTClusterBy_clustering_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTNewConstructorArg_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNewConstructorArg_optional_identifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNewConstructorArg_optional_path_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNewConstructor_type_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTNewConstructor_arguments_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTNewConstructor_argument)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTOptionsList_options_entries_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTOptionsList_options_entry)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTOptionsEntry_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTOptionsEntry_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateStatement_set_scope)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateStatement_scope)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTCreateStatement_set_is_or_replace)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateStatement_is_or_replace)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateStatement_set_is_if_not_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateStatement_is_if_not_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateStatement_is_default_scope)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateStatement_is_private)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateStatement_is_public)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateStatement_is_temp)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTFunctionParameter_set_procedure_parameter_mode)(void * arg0,int arg1);
extern void GO_EXPORT(ASTFunctionParameter_procedure_parameter_mode)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTFunctionParameter_set_is_not_aggregate)(void * arg0,int arg1);
extern void GO_EXPORT(ASTFunctionParameter_is_not_aggregate)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTFunctionParameter_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionParameter_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionParameter_templated_parameter_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionParameter_tvf_schema)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionParameter_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionParameter_default_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionParameter_IsTableParameter)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTFunctionParameter_IsTemplated)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTFunctionParameters_parameter_entries_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTFunctionParameters_parameter_entry)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTFunctionDeclaration_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionDeclaration_parameters)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFunctionDeclaration_IsTemplated)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTSqlFunctionBody_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVFArgument_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVFArgument_table_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVFArgument_model_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVFArgument_connection_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVFArgument_descriptor)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVF_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVF_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVF_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVF_pivot_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVF_unpivot_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVF_sample)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVF_argument_entries_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTTVF_argument_entry)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTTableClause_table_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableClause_tvf)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTModelClause_model_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTConnectionClause_connection_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableDataSource_path_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableDataSource_for_system_time)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableDataSource_where_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCloneDataSourceList_data_sources_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTCloneDataSourceList_data_source)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTCloneDataStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCloneDataStatement_data_source_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateConstantStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateConstantStatement_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateDatabaseStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateDatabaseStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateProcedureStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateProcedureStatement_parameters)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateProcedureStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateProcedureStatement_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateSchemaStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateSchemaStatement_collate)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateSchemaStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTransformClause_select_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateModelStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateModelStatement_transform_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateModelStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateModelStatement_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIndexItemList_ordering_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTIndexItemList_ordering_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTIndexStoringExpressionList_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTIndexStoringExpressionList_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTIndexUnnestExpressionList_unnest_expressions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTIndexUnnestExpressionList_unnest_expression)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTCreateIndexStatement_set_is_unique)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_is_unique)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_set_is_search)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_is_search)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_table_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_optional_table_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_optional_index_unnest_expression_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_index_item_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_optional_index_storing_expressions)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateIndexStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExportDataStatement_with_connection_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExportDataStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExportDataStatement_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExportModelStatement_model_name_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExportModelStatement_with_connection_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExportModelStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCallStatement_procedure_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCallStatement_arguments_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTCallStatement_argument)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTDefineTableStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDefineTableStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWithPartitionColumnsClause_table_element_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateSnapshotTableStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateSnapshotTableStatement_clone_data_source)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateSnapshotTableStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTypeParameterList_parameters_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTTypeParameterList_parameter)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTTVFSchema_columns_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTTVFSchema_column)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTTVFSchemaColumn_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTVFSchemaColumn_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableAndColumnInfo_table_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableAndColumnInfo_column_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableAndColumnInfoList_table_and_column_info_entries_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTTableAndColumnInfoList_table_and_column_info_entry)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTTemplatedParameterType_set_kind)(void * arg0,int arg1);
extern void GO_EXPORT(ASTTemplatedParameterType_kind)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTAnalyzeStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAnalyzeStatement_table_and_column_info_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAssertStatement_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAssertStatement_description)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAssertRowsModified_num_rows)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTReturningClause_select_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTReturningClause_action_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDeleteStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDeleteStatement_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDeleteStatement_offset)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDeleteStatement_where)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDeleteStatement_assert_rows_modified)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDeleteStatement_returning)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPrimaryKeyColumnAttribute_set_enforced)(void * arg0,int arg1);
extern void GO_EXPORT(ASTPrimaryKeyColumnAttribute_enforced)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTForeignKeyColumnAttribute_constraint_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForeignKeyColumnAttribute_reference)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnAttributeList_values_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTColumnAttributeList_value)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTStructColumnField_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStructColumnField_schema)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGeneratedColumnInfo_set_stored_mode)(void * arg0,int arg1);
extern void GO_EXPORT(ASTGeneratedColumnInfo_stored_mode)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTGeneratedColumnInfo_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGeneratedColumnInfo_GetSqlForStoredMode)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnDefinition_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnDefinition_schema)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableElementList_elements_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTTableElementList_element)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTColumnList_identifiers_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTColumnList_identifier)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTColumnPosition_set_type)(void * arg0,int arg1);
extern void GO_EXPORT(ASTColumnPosition_type)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTColumnPosition_identifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInsertValuesRow_values_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTInsertValuesRow_value)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTInsertValuesRowList_rows_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTInsertValuesRowList_row)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTInsertStatement_set_parse_progress)(void * arg0,int arg1);
extern void GO_EXPORT(ASTInsertStatement_parse_progress)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTInsertStatement_set_insert_mode)(void * arg0,int arg1);
extern void GO_EXPORT(ASTInsertStatement_insert_mode)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTInsertStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInsertStatement_column_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInsertStatement_rows)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInsertStatement_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInsertStatement_assert_rows_modified)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInsertStatement_returning)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTInsertStatement_GetSQLForInsertMode)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateSetValue_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateSetValue_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateItem_set_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateItem_insert_statement)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateItem_delete_statement)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateItem_update_statement)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateItemList_update_items_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTUpdateItemList_update_item)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTUpdateStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateStatement_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateStatement_offset)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateStatement_update_item_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateStatement_from_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateStatement_where)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateStatement_assert_rows_modified)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUpdateStatement_returning)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTruncateStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTruncateStatement_where)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeAction_set_action_type)(void * arg0,int arg1);
extern void GO_EXPORT(ASTMergeAction_action_type)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTMergeAction_insert_column_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeAction_insert_row)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeAction_update_item_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeWhenClause_set_match_type)(void * arg0,int arg1);
extern void GO_EXPORT(ASTMergeWhenClause_match_type)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTMergeWhenClause_search_condition)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeWhenClause_action)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeWhenClause_GetSQLForMatchType)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeWhenClauseList_clause_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTMergeWhenClauseList_clause_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTMergeStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeStatement_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeStatement_table_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeStatement_merge_condition)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTMergeStatement_when_clauses)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPrivilege_privilege_action)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPrivilege_paths)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPrivileges_privileges_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTPrivileges_privilege)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTPrivileges_is_all_privileges)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTGranteeList_grantee_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTGranteeList_grantee_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTGrantStatement_privileges)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGrantStatement_target_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGrantStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGrantStatement_grantee_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRevokeStatement_privileges)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRevokeStatement_target_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRevokeStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRevokeStatement_grantee_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRepeatableClause_argument)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFilterFieldsArg_set_filter_type)(void * arg0,int arg1);
extern void GO_EXPORT(ASTFilterFieldsArg_filter_type)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTFilterFieldsArg_path_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFilterFieldsArg_GetSQLForOperator)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTReplaceFieldsArg_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTReplaceFieldsArg_path_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTReplaceFieldsExpression_expr)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTReplaceFieldsExpression_arguments_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTReplaceFieldsExpression_argument)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTSampleSize_set_unit)(void * arg0,int arg1);
extern void GO_EXPORT(ASTSampleSize_unit)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTSampleSize_size)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSampleSize_partition_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSampleSize_GetSQLForUnit)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWithWeight_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSampleSuffix_weight)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSampleSuffix_repeat)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSampleClause_sample_method)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSampleClause_sample_size)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSampleClause_sample_suffix)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterAction_GetSQLForAlterAction)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSetOptionsAction_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSetAsAction_json_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSetAsAction_text_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAddConstraintAction_set_is_if_not_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAddConstraintAction_is_if_not_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAddConstraintAction_constraint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropPrimaryKeyAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropPrimaryKeyAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropConstraintAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropConstraintAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropConstraintAction_constraint_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterConstraintEnforcementAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterConstraintEnforcementAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterConstraintEnforcementAction_set_is_enforced)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterConstraintEnforcementAction_is_enforced)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterConstraintEnforcementAction_constraint_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterConstraintSetOptionsAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterConstraintSetOptionsAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterConstraintSetOptionsAction_constraint_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterConstraintSetOptionsAction_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAddColumnAction_set_is_if_not_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAddColumnAction_is_if_not_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAddColumnAction_column_definition)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAddColumnAction_column_position)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAddColumnAction_fill_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropColumnAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropColumnAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropColumnAction_column_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRenameColumnAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTRenameColumnAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTRenameColumnAction_column_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRenameColumnAction_new_column_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnTypeAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterColumnTypeAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterColumnTypeAction_column_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnTypeAction_schema)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnTypeAction_collate)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnOptionsAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterColumnOptionsAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterColumnOptionsAction_column_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnOptionsAction_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnSetDefaultAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterColumnSetDefaultAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterColumnSetDefaultAction_column_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnSetDefaultAction_default_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnDropDefaultAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterColumnDropDefaultAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterColumnDropDefaultAction_column_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterColumnDropNotNullAction_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterColumnDropNotNullAction_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterColumnDropNotNullAction_column_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTGrantToClause_set_has_grant_keyword_and_parens)(void * arg0,int arg1);
extern void GO_EXPORT(ASTGrantToClause_has_grant_keyword_and_parens)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTGrantToClause_grantee_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRestrictToClause_restrictee_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAddToRestricteeListClause_set_is_if_not_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAddToRestricteeListClause_is_if_not_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAddToRestricteeListClause_restrictee_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRemoveFromRestricteeListClause_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTRemoveFromRestricteeListClause_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTRemoveFromRestricteeListClause_restrictee_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTFilterUsingClause_set_has_filter_keyword)(void * arg0,int arg1);
extern void GO_EXPORT(ASTFilterUsingClause_has_filter_keyword)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTFilterUsingClause_predicate)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRevokeFromClause_set_is_revoke_from_all)(void * arg0,int arg1);
extern void GO_EXPORT(ASTRevokeFromClause_is_revoke_from_all)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTRevokeFromClause_revoke_from_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRenameToClause_new_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSetCollateClause_collate)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterActionList_actions_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTAlterActionList_action)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTAlterAllRowAccessPoliciesStatement_table_name_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterAllRowAccessPoliciesStatement_alter_action)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForeignKeyActions_set_udpate_action)(void * arg0,int arg1);
extern void GO_EXPORT(ASTForeignKeyActions_udpate_action)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTForeignKeyActions_set_delete_action)(void * arg0,int arg1);
extern void GO_EXPORT(ASTForeignKeyActions_delete_action)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTForeignKeyReference_set_match)(void * arg0,int arg1);
extern void GO_EXPORT(ASTForeignKeyReference_match)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTForeignKeyReference_set_enforced)(void * arg0,int arg1);
extern void GO_EXPORT(ASTForeignKeyReference_enforced)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTForeignKeyReference_table_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForeignKeyReference_column_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForeignKeyReference_actions)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTScript_statement_list_node)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTScript_statement_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTScript_statement_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTElseifClause_condition)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTElseifClause_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTElseifClause_if_stmt)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTElseifClauseList_elseif_clauses_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTElseifClauseList_elseif_clause)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTIfStatement_condition)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIfStatement_then_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIfStatement_elseif_clauses)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTIfStatement_else_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWhenThenClause_condition)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWhenThenClause_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWhenThenClause_case_stmt)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTWhenThenClauseList_when_then_clauses_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTWhenThenClauseList_when_then_clause)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTCaseStatement_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCaseStatement_when_then_clauses)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCaseStatement_else_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTHint_num_shards_hint)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTHint_hint_entries_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTHint_hint_entry)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTHintEntry_qualifier)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTHintEntry_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTHintEntry_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUnpivotInItemLabel_label)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDescriptor_columns)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnSchema_type_parameters)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnSchema_generated_column_info)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnSchema_default_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnSchema_collate)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnSchema_attributes)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnSchema_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTColumnSchema_ContainsAttribute)(void * arg0,int arg1,char* arg2);
extern void GO_EXPORT(ASTSimpleColumnSchema_type_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTArrayColumnSchema_element_schema)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTTableConstraint_constraint_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPrimaryKey_set_enforced)(void * arg0,int arg1);
extern void GO_EXPORT(ASTPrimaryKey_enforced)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTPrimaryKey_column_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTPrimaryKey_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForeignKey_column_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForeignKey_reference)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForeignKey_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCheckConstraint_set_is_enforced)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCheckConstraint_is_enforced)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCheckConstraint_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCheckConstraint_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDescriptorColumn_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDescriptorColumnList_descriptor_column_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTDescriptorColumnList_descriptor_column_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTCreateEntityStatement_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateEntityStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateEntityStatement_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateEntityStatement_json_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateEntityStatement_text_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRaiseStatement_message)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRaiseStatement_is_rethrow)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTExceptionHandler_statement_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExceptionHandlerList_exception_handler_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTExceptionHandlerList_exception_handler_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTBeginEndBlock_label)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBeginEndBlock_statement_list_node)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBeginEndBlock_handler_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBeginEndBlock_statement_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTBeginEndBlock_statement_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTBeginEndBlock_has_exception_handler)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTIdentifierList_identifier_list_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTIdentifierList_identifier_list)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTVariableDeclaration_variable_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTVariableDeclaration_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTVariableDeclaration_default_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUntilClause_condition)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTUntilClause_repeat_stmt)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBreakContinueStatement_label)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTBreakContinueStatement_set_keyword)(void * arg0,int arg1);
extern void GO_EXPORT(ASTBreakContinueStatement_keyword)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTBreakStatement_set_keyword)(void * arg0,int arg1);
extern void GO_EXPORT(ASTBreakStatement_keyword)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTContinueStatement_set_keyword)(void * arg0,int arg1);
extern void GO_EXPORT(ASTContinueStatement_keyword)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTDropPrivilegeRestrictionStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropPrivilegeRestrictionStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropPrivilegeRestrictionStatement_privileges)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropPrivilegeRestrictionStatement_object_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropPrivilegeRestrictionStatement_name_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropRowAccessPolicyStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropRowAccessPolicyStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropRowAccessPolicyStatement_table_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropRowAccessPolicyStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreatePrivilegeRestrictionStatement_privileges)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreatePrivilegeRestrictionStatement_object_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreatePrivilegeRestrictionStatement_name_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreatePrivilegeRestrictionStatement_restrict_to)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateRowAccessPolicyStatement_set_has_access_keyword)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateRowAccessPolicyStatement_has_access_keyword)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateRowAccessPolicyStatement_target_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateRowAccessPolicyStatement_grant_to)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateRowAccessPolicyStatement_filter_using)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateRowAccessPolicyStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTDropStatement_set_drop_mode)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropStatement_drop_mode)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTDropStatement_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropStatement_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTDropStatement_set_schema_object_kind)(void * arg0,int arg1);
extern void GO_EXPORT(ASTDropStatement_schema_object_kind)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTDropStatemnt_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSingleAssignment_variable)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSingleAssignment_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTParameterAssignment_parameter)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTParameterAssignment_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSystemVariableAssignment_system_variable)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTSystemVariableAssignment_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAssignmentFromStruct_variables)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAssignmentFromStruct_struct_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStmtBase_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStmtBase_table_element_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStmtBase_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStmtBase_like_table_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStmtBase_collate)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStatement_clone_data_source)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStatement_copy_data_source)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStatement_partition_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStatement_cluster_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableStatement_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateExternalTableStatement_with_partition_columns_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateExternalTableStatement_with_connection_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateViewStatementBase_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateViewStatementBase_column_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateViewStatementBase_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateViewStatementBase_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateMaterializedViewStatement_partition_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateMaterializedViewStatement_cluster_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLoopStatement_label)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLoopStatement_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLoopStatement_IsLoopStatement)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTWhileStatement_condition)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTRepeatStatement_until_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForInStatement_variable)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTForInStatement_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterStatementBase_set_is_if_exists)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAlterStatementBase_is_if_exists)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTAlterStatementBase_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterStatementBase_action_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterPrivilegeRestrictionStatement_privileges)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterPrivilegeRestrictionStatement_object_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterRowAccessPolicyStatement_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAlterEntityStatement_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateFunctionStmtBase_set_determinism_level)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateFunctionStmtBase_determinism_level)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTCreateFunctionStmtBase_set_sql_security)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateFunctionStmtBase_sql_security)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTCreateFunctionStmtBase_function_declaration)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateFunctionStmtBase_language)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateFunctionStmtBase_code)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateFunctionStmtBase_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateFunctionStatement_set_is_aggregate)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateFunctionStatement_is_aggregate)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateFunctionStatement_set_is_remote)(void * arg0,int arg1);
extern void GO_EXPORT(ASTCreateFunctionStatement_is_remote)(void * arg0,char* arg1);
extern void GO_EXPORT(ASTCreateFunctionStatement_return_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateFunctionStatement_sql_function_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateFunctionStatement_with_connection_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableFunctionStatement_return_tvf_schema)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTCreateTableFunctionStatement_query)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTStructColumnSchema_struct_fields_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTStructColumnSchema_struct_field)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTExecuteIntoClause_identifiers)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExecuteUsingArgument_expression)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExecuteUsingArgument_alias)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExecuteUsingClause_arguments_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTExecuteUsingClause_argument)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ASTExecuteImmediateStatement_sql)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExecuteImmediateStatement_into_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTExecuteImmediateStatement_using_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAuxLoadDataFromFilesOptionsList_options_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAuxLoadDataStatement_set_insertion_mode)(void * arg0,int arg1);
extern void GO_EXPORT(ASTAuxLoadDataStatement_insertion_mode)(void * arg0,int* arg1);
extern void GO_EXPORT(ASTAuxLoadDataStatement_partition_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAuxLoadDataStatement_cluster_by)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAuxLoadDataStatement_from_files)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAuxLoadDataStatement_with_partition_columns_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTAuxLoadDataStatement_with_connection_clause)(void * arg0,void ** arg1);
extern void GO_EXPORT(ASTLabel_name)(void * arg0,void ** arg1);
